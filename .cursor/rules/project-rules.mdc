---
description: 
globs: 
alwaysApply: true
---
# Automatic Linting & Code Quality

## Always Fix Lint Issues Automatically

When editing or creating code:

1. **Auto-fix lint errors** - Always apply ESLint fixes directly to the code
2. **Format code automatically** - Apply Prettier formatting without asking
3. **Follow project linting rules** - Respect existing .eslintrc, prettier.config, etc.
4. **Fix TypeScript errors** - Resolve type issues and imports
5. **Optimize imports** - Remove unused imports, sort imports properly

## Code Quality Standards:
- Use consistent indentation (2 spaces default)
- Add proper TypeScript types
- Remove console.logs in production code
- Follow naming conventions (camelCase, PascalCase)
- Add missing semicolons or remove them based on project style
- Fix spacing around operators and brackets

## Auto-Fix Commands to Suggest:
When there are linting issues, immediately suggest:
```bash
npx eslint --fix .
npx prettier --write .
```

## Don't Ask - Just Fix:
- Apply formatting changes directly in code suggestions
- Fix obvious lint violations automatically
- Suggest the fix command after making changes
- Maintain existing project code style consistently

## Example Behavior:

Instead of showing linting errors, show the corrected code and mention: "Fixed linting issues - run `npx eslint --fix .` to apply similar fixes project-wide."